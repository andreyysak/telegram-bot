import { LicensePlateResponse } from "../types/LicensePlateResponse.js";

const token = process.env.DAI_API_TOKEN;

if (!token) throw new Error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–∫–µ–Ω.');

const headers = {
  'Accept': 'application/json',
  'X-Api-Key': token,
};

async function fetchLicensePlate(license: string): Promise<LicensePlateResponse> {
  const url = `https://baza-gai.com.ua/nomer/${license}`;

  try {
    const response = await fetch(url, { headers });

    if (!response.ok) {
      throw new Error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: ${response.status} ${response.statusText}`);
    }

    const data = await response.json();

    if (!data) {
      throw new Error('‚ùå –ü–æ—Ä–æ–∂–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API.');
    }

    return data;
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –ø–æ –Ω–æ–º–µ—Ä—É:', error);
    throw error;
  }
}

const EMOJI = {
  licensePlate: 'üöó',
  vin: 'üîë',
  region: 'üìç',
  vendor: 'üè≠',
  model: 'üì¶',
  modelYear: 'üìÖ',
  registrationDate: 'üìù',
  operation: '‚öôÔ∏è',
  color: 'üé®',
  kind: 'üöô',
};

export function getLicenseCarInfo(license: string) {
  return fetchLicensePlate(license).then(data => {
    const lastOperation = data.operations.find(op => op.is_last);

    return [
      { name: `${EMOJI.licensePlate} –ù–æ–º–µ—Ä–Ω–∏–π –∑–Ω–∞–∫`, value: data.digits },
      { name: `${EMOJI.vin} VIN-–∫–æ–¥`, value: data.vin ?? '–ù–µ–º–∞—î' },
      { name: `${EMOJI.region} –†–µ–≥—ñ–æ–Ω`, value: data.region.name_ua },
      { name: `${EMOJI.vendor} –í–∏—Ä–æ–±–Ω–∏–∫`, value: data.vendor },
      { name: `${EMOJI.model} –ú–æ–¥–µ–ª—å`, value: data.model },
      { name: `${EMOJI.modelYear} –†—ñ–∫ –≤–∏–ø—É—Å–∫—É`, value: data.model_year },
      { name: `${EMOJI.registrationDate} –î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó`, value: lastOperation?.registered_at ?? '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö' },
      { name: `${EMOJI.operation} –û–ø–µ—Ä–∞—Ü—ñ—è`, value: lastOperation?.operation.ua ?? '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö' },
      { name: `${EMOJI.color} –ö–æ–ª—ñ—Ä`, value: lastOperation?.color.ua ?? '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö' },
      { name: `${EMOJI.kind} –¢–∏–ø –¢–ó`, value: lastOperation?.kind.ua ?? '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö' },
    ];
  });
}
