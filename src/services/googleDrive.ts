import path from 'path';
import { google } from 'googleapis';
import fs from 'fs';

const SCOPES = ['https://www.googleapis.com/auth/drive '];
const CREDENTIALS_PATH = path.join(process.cwd(), 'credentials.json');
const EMAIL_ADDRESS = process.env.GOOGLE_EMAIL_ADDRESS

let authClient: any;

async function getAuth() {
  if (authClient) return authClient;

  const content = fs.readFileSync(CREDENTIALS_PATH, 'utf8');
  const credentials = JSON.parse(content);
  const { client_email, private_key } = credentials;

  authClient = new google.auth.JWT(
    client_email,
    undefined,
    private_key,
    SCOPES
  );

  await authClient.authorize();

  console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è Service Account –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ');
  return authClient;
}

export async function uploadFileToDrive(filePath: string, folderId?: string) {
  try {
    const auth = await getAuth();
    const drive = google.drive({ version: 'v3', auth });

    const fileMetadata = {
      name: path.basename(filePath),
      parents: folderId ? [folderId] : [],
    };

    const media = {
      mimeType: 'text/csv',
      body: fs.createReadStream(filePath),
    };

    console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ñ–∞–π–ª:', filePath);

    // 1. –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª
    const res = await drive.files.create({
      requestBody: fileMetadata,
      media: media,
      fields: 'id, webViewLink, webContentLink',
    });

    const fileId = res.data.id;

    if (!fileId) throw new Error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É');

    const webViewLink = res.data.webViewLink || `https://drive.google.com/file/d/ ${fileId}/view`;

    console.log('üü¢ –§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', {
      fileId,
      webViewLink,
      raw: res.data,
    });

    // 2. –î–æ–¥–∞—î–º–æ —Å–µ–±–µ —è–∫ permission
    await drive.permissions.create({
      fileId: fileId,
      requestBody: {
        role: 'writer',
        type: 'user',
        emailAddress: EMAIL_ADDRESS,
      },
    });

    console.log(`üìÅ –ü–æ—Å–∏–ª–∞–Ω–Ω—è: ${webViewLink}`);

    return { fileId, webViewLink };
  } catch (e: any) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –Ω–∞ Google Drive:', e.message || e);
    throw e;
  }
}