import { Composer } from 'grammy';
import pool from '../../db/client.js';
import { BotContext } from '../../bot.js';
import { carMenuKeyboard } from '../../keyboard/carMenu.js';

export const tripModule = new Composer<BotContext>();

tripModule.hears('üõ£Ô∏è –ü–æ—ó–∑–¥–∫–∞', async (ctx) => {
  await ctx.reply('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–ª–æ–º–µ—Ç—Ä—ñ–≤:', {
    reply_markup: { remove_keyboard: true },
  });
  ctx.session.state = 'awaiting_kilometers';
});

tripModule.on(':text').filter(
  (ctx): boolean => ctx.session.state === 'awaiting_kilometers',
  async (ctx) => {
    const text = ctx.message?.text?.trim();
    const userId = ctx.from?.id;

    if (!userId) return ctx.reply('–ü–æ–º–∏–ª–∫–∞: –Ω–µ –º–æ–∂—É –æ—Ç—Ä–∏–º–∞—Ç–∏ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.');

    if (!text) throw new Error('–ù–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –∂–æ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö.')

    const km = parseFloat(text.replace(',', '.'));

    if (isNaN(km)) {
      return ctx.reply('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–µ —á–∏—Å–ª–æ.');
    }

    try {
      const res = await pool.query(
        'SELECT id FROM users WHERE telegram_user_id = $1',
        [userId]
      );

      if (res.rows.length === 0) {
        return ctx.reply('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É —Å–∏—Å—Ç–µ–º—ñ.');
      }

      const dbUserId = res.rows[0].id;

      await pool.query(
        'INSERT INTO trips (user_id, kilometers) VALUES ($1, $2)',
        [dbUserId, km]
      );

      await ctx.reply(`‚úÖ –ö—ñ–ª–æ–º–µ—Ç—Ä–∞–∂ ${km} –∫–º —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.`, {
        reply_markup: carMenuKeyboard
      });
      ctx.session.state = null;
    } catch (e) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø–æ—ó–∑–¥–∫–∏:', e);
      await ctx.reply('‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ.');
    }
  }
);