import { Composer } from "grammy";
import { BotContext } from "../../bot.js";
import { EXPENSE_TEXT, expenseTrackerMainMenu } from "../../keyboard/expenseTrackerMenu.js";
import { incomeCategories } from "../../keyboard/incomeCategories.js";
import { expenseCategories } from "../../keyboard/expenseCategories.js";
import pool from "../../db/client.js";
import { CATEGORY_UA_ICONS } from "../../assets/categoryUA.js";

export const expenseTrackerModule = new Composer<BotContext>()

expenseTrackerModule.hears([EXPENSE_TEXT.income, EXPENSE_TEXT.expense], async (ctx) => {
  const isIncome = ctx.match === EXPENSE_TEXT.income;

  ctx.session.expense_tracker = {
    state: 'category',
    type: isIncome ? 'income' : 'expense'
  }

  const keyboard = isIncome ? incomeCategories : expenseCategories;

  await ctx.reply(isIncome ? 'üíº –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–æ—Ö–æ–¥—É:' : 'üßæ –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç:', {
    reply_markup: keyboard,
  });
})

expenseTrackerModule.callbackQuery(/^komunalni_platezhi|produkty|avto|pidpysky|rozvagy|podorozhi|liky|taxi|tech|zasoby_osobystoi_hihieny|sport|podarunky|osvita|odyag_ta_vzuttya|zvyazok_ta_internet|knygy_ta_samoosvita|pobutovi_tovary_ta_remont|robochi_vytraty_biznes|investytsii|vidkladennya|inshe|salary|gift_income|investment_returns|side_job|other_income$/, async (ctx) => {
  const category = ctx.callbackQuery.data;
  const type = ctx.session.expense_tracker?.type;

  if (!type) {
    return ctx.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –∑–∞–ø–∏—Å—É.');
  }

  ctx.session.expense_tracker = {
    ...ctx.session.expense_tracker,
    category,
    state: 'amount',
  };

  await ctx.editMessageText(`üî¢ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É ${type === 'income' ? '–¥–æ—Ö–æ–¥—É' : '–≤–∏—Ç—Ä–∞—Ç'}:`);

  await ctx.answerCallbackQuery();
});


expenseTrackerModule.on(':text').filter(
  (ctx): boolean => ctx.session.expense_tracker?.state === 'amount',
  async (ctx) => {
    const text = ctx.message?.text.trim();
    const userId = ctx.from?.id;
    const sessionData = ctx.session.expense_tracker;

    if (!text) throw new Error('‚ùå –ù–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –∂–æ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö.')

    if (!userId || !sessionData || !sessionData.type || !sessionData.category) {
      return ctx.reply('‚ùå –î–∞–Ω—ñ –≤—Ç—Ä–∞—á–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', {
        reply_markup: expenseTrackerMainMenu,
      });
    }

    const amount = parseFloat(text.replace(',', '.'));

    if (isNaN(amount)) {
      return ctx.reply('‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—É–º—É.');
    }

    try {
      // –û—Ç—Ä–∏–º—É—î–º–æ user_id –∑ –ë–î
      const userRes = await pool.query(
        'SELECT id FROM users WHERE telegram_user_id = $1',
        [userId]
      );

      if (userRes.rows.length === 0) {
        return ctx.reply('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É —Å–∏—Å—Ç–µ–º—ñ.');
      }

      const dbUserId = userRes.rows[0].id;

      // –î–æ–¥–∞—î–º–æ –¥–æ –ë–î
      await pool.query(
        'INSERT INTO expense_tracker (user_id, type, category, amount) VALUES ($1, $2, $3, $4)',
        [dbUserId, sessionData.type, sessionData.category, amount]
      );

      // –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É —ñ–∑ —Å–º–∞–π–ª–æ–º
      const translation = CATEGORY_UA_ICONS[sessionData.category as keyof typeof CATEGORY_UA_ICONS];

      const uaCategory = translation
        ? `${translation.icon} ${translation.name}`
        : sessionData.category;

      // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
      await ctx.reply(`‚úÖ ${sessionData.type === 'income' ? '–î–æ—Ö—ñ–¥' : '–í–∏—Ç—Ä–∞—Ç–∞'} –¥–æ–¥–∞–Ω–æ:\n\n${uaCategory} ‚Äî ${amount} –≥—Ä–Ω`, {
        reply_markup: expenseTrackerMainMenu,
      });

      ctx.session.expense_tracker = undefined;

    } catch (e) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Å—É:', e);
      await ctx.reply('‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Å—É.');
    }
  }
);